from fastapi import APIRouter, HTTPException
from app.halls.dao import HallDAO
from app.halls.schemas import SHallCreate, SHallRead
from typing import List

router = APIRouter(prefix='/halls', tags=['–ó–∞–ª—ã üé¶'])

@router.post("")
async def create_hall(hall_data: SHallCreate):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
    existing_hall = await HallDAO.find_one_or_none(name=hall_data.name)
    if existing_hall:
        raise HTTPException(status_code=400, detail=f"–ó–∞–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{hall_data.name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ª
    await HallDAO.add(**hall_data.model_dump())
    return {"message": "–ó–∞–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"}

@router.get("", response_model=List[SHallRead])
async def get_all_halls():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ª–æ–≤"""
    return await HallDAO.find_all()

@router.get("/{hall_id}", response_model=SHallRead)
async def get_hall(hall_id: int):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∑–∞–ª–µ"""
    hall = await HallDAO.find_by_id(hall_id)
    if not hall:
        raise HTTPException(status_code=404, detail="–ó–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return hall

@router.delete("/{hall_id}")
async def delete_hall(hall_id: int):
    """–£–¥–∞–ª–∏—Ç—å –∑–∞–ª"""
    hall = await HallDAO.find_by_id(hall_id)
    if not hall:
        raise HTTPException(status_code=404, detail="–ó–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    await HallDAO.delete(hall_id)
    return {"message": "–ó–∞–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"}


